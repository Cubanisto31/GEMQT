library(tidyverse)
library(readr)
library(ggplot2)
library(dplyr)
library(corrplot)
# Chargement des données
main_data <- read_csv("experiment_data_20250721_140335.csv")
sources_data <- read_csv("sources_detail_20250721_140335.csv")
aggregated_data <- read_csv("aggregated_data_20250721_140335.csv")
temporal_data <- read_csv("temporal_analysis_20250721_140335.csv")
View(aggregated_data)
View(main_data)
View(sources_data)
View(temporal_data)
# Vérification des données
cat("=== RÉSUMÉ DES DONNÉES ===\n")
cat("Enregistrements principaux:", nrow(main_data), "\n")
cat("Sources détaillées:", nrow(sources_data), "\n")
cat("Données agrégées:", nrow(aggregated_data), "\n")
# Statistiques descriptives
summary(aggregated_data)
# Analyse par modèle
cat("\n=== ANALYSE PAR MODÈLE ===\n")
model_summary <- aggregated_data %>%
group_by(model_name) %>%
summarise(
n_queries = n(),
avg_sources = mean(total_sources, na.rm = TRUE),
avg_response_time = mean(response_time_ms, na.rm = TRUE),
pct_with_sources = mean(has_sources, na.rm = TRUE) * 100
)
print(model_summary)
# Test de l'hypothèse 2a : Corrélation entre modèles
cat("\n=== HYPOTHÈSE 2a : CORRÉLATION ENTRE MODÈLES ===\n")
if(length(unique(aggregated_data$model_name)) >= 2) {
correlation_data <- aggregated_data %>%
select(query_id, model_name, total_sources) %>%
pivot_wider(names_from = model_name, values_from = total_sources)
if(ncol(correlation_data) >= 3) {
cor_matrix <- cor(correlation_data[,-1], use = "complete.obs")
print(cor_matrix)
# Test de corrélation
if(ncol(correlation_data) == 3) {
cor_test <- cor.test(correlation_data[[2]], correlation_data[[3]])
cat("Corrélation p-value:", cor_test$p.value, "\n")
}
}
}
